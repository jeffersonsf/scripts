## Cria Diretorios necessarios para a realização de bkp e seta variaveis a serem utilizadas
DB_ID=`strings /u01/app/oracle/oradata/XE/system.dbf  | egrep '[0-9], MAXVALUE,'| awk '{print $1}'| sed 's/,//g' | uniq`
backupArea=/u01/app/oracle/fast_recovery_area/XE;
dt=`date +%d-%m-%Y`; 
mkdir -p /mnt/backup/autobackup /mnt/backup/backupset;
backupLocal=/mnt/backup;

t2=`ls -l $backupLocal/autobackup | wc -l`;
t3=`ls -l $backupLocal/backupset | wc -l`;

if [$t2 == '0']; then
	cp -nr $backupArea/autobackup/*
fi
if [$t3 == '0']; then
        cp -nr $backupArea/backupset/*
fi


for backup in $(ls -l $backupArea | egrep 'autobackup|backupset' | awk '{print $9}'); 
do ##Pesquisa dentro do diretorio do oracle os arquivos de backup presentes através da sua data de criação
	findOracle=$(find $backupArea/$backup -type f | xargs stat | grep 'Change:' | awk '{print $2}');
	b=0; ##Guarda os valores dentro de um array para ser comparado com os dados guardados pelo outro array
	for t in ${findOracle[@]}
	do
		arrayArea[$b]=$t;
		b=$((b+1));
	done
	##Pesquisa dentro do diretorio /mnt/backup os arquivos de backup presentes através da sua data de criação
	findLocal=$(find $backupLocal/$backup -type f | xargs stat | grep 'Change:' | awk '{print $2}');
	a=0; ##Guarda os valores dentro de um array para ser comparado com os dados guardados pelo outro array
	for i in ${findLocal[@]}
	do
		array[$a]=$i;
		a=$((a+1));
	done
	##Comparação dos Arrays e copia dos arquivos
	for y in ${arrayArea[*]}
	do
		for p in ${array[*]}
		do
			if [ $y==$p ]; then
				echo "Sem necessidade de copiar arquivos";
			else
				echo "Arquivos sendo copiados..";
			fi
		done
	done
done
